"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const AdminController_1 = require("../controllers/AdminController");
const AdminRepository_1 = require("../../infrastructure/repositories/AdminRepository");
const UserRepository_1 = require("../../infrastructure/repositories/UserRepository");
const PostRepository_1 = require("../../infrastructure/repositories/PostRepository");
const adminAuthMiddleware_1 = require("../middleware/adminAuthMiddleware");
const ReportRepository_1 = require("../../infrastructure/repositories/ReportRepository");
const ProductRepository_1 = require("../../infrastructure/repositories/ProductRepository");
const adminRouter = (0, express_1.Router)();
const adminRepository = new AdminRepository_1.AdminRepository();
const userRepository = new UserRepository_1.UserRepository();
const postRepository = new PostRepository_1.PostRepository();
const reportRepository = new ReportRepository_1.ReportRepository();
const productRepository = new ProductRepository_1.ProductRepository();
const adminController = new AdminController_1.AdminController(adminRepository, userRepository, postRepository, reportRepository, productRepository);
adminRouter.post('/login', (req, res) => adminController.login(req, res));
adminRouter.post('/logout', adminAuthMiddleware_1.adminAuthMiddleware, (req, res) => adminController.logout(req, res));
adminRouter.get('/users', adminAuthMiddleware_1.adminAuthMiddleware, (req, res) => adminController.getUsers(req, res));
adminRouter.put('/user/block/:userId', adminAuthMiddleware_1.adminAuthMiddleware, (req, res) => adminController.toggleUserBlock(req, res));
adminRouter.get('/posts', adminAuthMiddleware_1.adminAuthMiddleware, (req, res) => adminController.getPosts(req, res));
adminRouter.put('/post/block/:postId', adminAuthMiddleware_1.adminAuthMiddleware, (req, res) => adminController.togglePostBlock(req, res));
adminRouter.get('/reports', adminAuthMiddleware_1.adminAuthMiddleware, (req, res) => adminController.getAllReports(req, res));
adminRouter.put('/reports/status/:id', adminAuthMiddleware_1.adminAuthMiddleware, (req, res) => adminController.updateReportStatus(req, res));
adminRouter.get('/products', adminAuthMiddleware_1.adminAuthMiddleware, (req, res) => adminController.getAllProducts(req, res));
adminRouter.patch('/products/approve/:productId', adminAuthMiddleware_1.adminAuthMiddleware, (req, res) => adminController.approveProduct(req, res));
adminRouter.patch('/products/status/:productId', adminAuthMiddleware_1.adminAuthMiddleware, (req, res) => adminController.updateProductStatus(req, res));
exports.default = adminRouter;
//# sourceMappingURL=AdminRoute.js.map